// –ó–∞–¥–∞–Ω–∏–µ 1.

import React, { useState, useEffect, useRef } from 'react';
import { View, Image, TouchableOpacity, Animated, Text, StyleSheet } from 'react-native';

const SimpleSlider = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const fadeAnim = useRef(new Animated.Value(1)).current;

  const images = [
    'https://avatars.mds.yandex.net/i?id=67d72b2601792bd3d7561b1f30cedefeeccb5a16-5424538-images-thumbs&n=13',
    'https://avatars.mds.yandex.net/i?id=8d1f8091c95438e54379d34f89423bda79fa1231-4820816-images-thumbs&n=13', 
    'https://avatars.mds.yandex.net/i?id=2a00000199dd8dc6552abac2aa220c11a50f-1766800-fast-images&n=13',
  ];

  const nextSlide = () => {
    Animated.timing(fadeAnim, {
      toValue: 0,
      duration: 300,
      useNativeDriver: true,
    }).start(() => {
      setCurrentIndex((currentIndex + 1) % images.length);
      Animated.timing(fadeAnim, {
        toValue: 1,
        duration: 300,
        useNativeDriver: true,
      }).start();
    });
  };

  useEffect(() => {
    const interval = setInterval(nextSlide, 3000);
    return () => clearInterval(interval);
  }, [currentIndex]);

  return (
    <View style={styles.container}>
      <TouchableOpacity onPress={nextSlide}>
        <Animated.Image
          source={{ uri: images[currentIndex] }}
          style={[styles.image, { opacity: fadeAnim }]}
        />
      </TouchableOpacity>
      
      <Text style={styles.counter}>
        {currentIndex + 1} / {images.length}
      </Text>
    </View>
  );
};

const WelcomeScreen = () => {
  return (
    <View style={styles.screen}>
      <Text style={styles.title}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</Text>
      <Text style={styles.subtitle}>–ù–∞—à —Å–ª–∞–π–¥–µ—Ä</Text>
      
      <SimpleSlider />
      
      <TouchableOpacity style={styles.button}>
        <Text style={styles.buttonText}>–ù–∞—á–∞—Ç—å</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  screen: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f0f0f0',
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  subtitle: {
    fontSize: 16,
    color: '#666',
    marginBottom: 30,
  },
  container: {
    alignItems: 'center',
    marginBottom: 30,
  },
  image: {
    width: 300,
    height: 200,
    borderRadius: 10,
  },
  counter: {
    marginTop: 10,
    fontSize: 16,
  },
  button: {
    backgroundColor: '#007AFF',
    padding: 15,
    borderRadius: 10,
    minWidth: 200,
    alignItems: 'center',
  },
  buttonText: {
    color: 'white',
    fontSize: 18,
    fontWeight: 'bold',
  },
});

export default WelcomeScreen;





// –ó–∞–¥–∞–Ω–∏–µ 2.

import React, { useEffect, useRef } from 'react';
import { View, Text, StyleSheet, Animated} from 'react-native';

const LaunchScreen = ({ onFinish }) => {
  const fadeAnim = useRef(new Animated.Value(1)).current;
  const scaleAnim = useRef(new Animated.Value(0.5)).current;
  const rotateAnim = useRef(new Animated.Value(0)).current;

  useEffect(() => {
    Animated.parallel([

      Animated.timing(fadeAnim, {
        toValue: 1,
        duration: 1000,
        useNativeDriver: true,
      }),

      Animated.timing(scaleAnim, {
        toValue: 1,
        duration: 1000,
        useNativeDriver: true,
      }),

     Animated.timing(rotateAnim, {
        toValue: 1,
        duration: 1500,
        useNativeDriver: true,
      })
    ]).start(() => {
      setTimeout(() => {
        onFinish();
      }, 1000); 
    });
  }, []);

  const rotateInterpolate = rotateAnim.interpolate({
    inputRange: [0, 1],
    outputRange: ['0deg', '360deg']
  });

  return (
    <View style={styles.container}>
      <Animated.View style={[
        styles.logoContainer,
        {
          opacity: fadeAnim,
          transform: [
            { scale: scaleAnim },
            { rotate: rotateInterpolate }
          ]
        }
      ]}>
        <View style={styles.logo}>
          <Text style={styles.logoText}>üöÄ</Text>
        </View>
      </Animated.View>
      
      <Animated.Text style={[
        styles.title,
        { opacity: fadeAnim }
      ]}>
        –ú–æ–µ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      </Animated.Text>
      
      <Animated.Text style={[
        styles.subtitle,
        { opacity: fadeAnim }
      ]}>
        –ó–∞–≥—Ä—É–∂–∞–µ–º...
      </Animated.Text>
    </View>
  );
};


const App = () => {
  const [showLaunch, setShowLaunch] = React.useState(true);

  if (showLaunch) {
    return <LaunchScreen onFinish={() => setShowLaunch(false)} />;
  }

  return (
    <View style={styles.appContainer}>
      <Text style={styles.welcomeText}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!</Text>
      <Text style={styles.normalText}>–û—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∂–µ–Ω</Text>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#ffffff',
  },
  logoContainer: {
    alignItems: 'center',
    marginBottom: 30,
  },
  logo: {
    width: 100,
    height: 100,
    borderRadius: 50,
    backgroundColor: '#007AFF',
    justifyContent: 'center',
    alignItems: 'center',
  },
  logoText: {
    fontSize: 40,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 10,
  },
  subtitle: {
    fontSize: 16,
    color: '#666',
  },
  appContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#ffffff',
    padding: 20,
  },
  welcomeText: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  normalText: {
    fontSize: 16,
    color: '#66',
  },
});

export default App;
